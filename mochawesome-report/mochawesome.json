{
  "stats": {
    "suites": 6,
    "tests": 21,
    "passes": 6,
    "pending": 0,
    "failures": 15,
    "start": "2021-08-03T06:47:09.949Z",
    "end": "2021-08-03T06:47:09.967Z",
    "duration": 18,
    "testsRegistered": 21,
    "passPercent": 28.57142857142857,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5fa04028-1fe2-43a4-b4fc-ac5657082e9e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d287d223-2777-44eb-b0b0-4ade2a01d5fe",
          "title": "Addition test",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/addition.test.js",
          "file": "/test/addition.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return sum ",
              "fullTitle": "Addition test Return sum ",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition(10, 20, 30)).to.equal(60);",
              "err": {},
              "uuid": "b59121fa-012c-458a-9b4f-463535fc28c4",
              "parentUUID": "d287d223-2777-44eb-b0b0-4ade2a01d5fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Detect empty inputs",
              "fullTitle": "Addition test Detect empty inputs",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function () {\n  addition();\n}).to.throw(Error, \"Invalid Input\");",
              "err": {},
              "uuid": "1e91bacf-8138-4eaa-8356-ca62c0d3656e",
              "parentUUID": "d287d223-2777-44eb-b0b0-4ade2a01d5fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Detects alphabet inputs",
              "fullTitle": "Addition test Detects alphabet inputs",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  addition(\"a\", \"b\");\n}).to.throw(Error, \"Invalid Input\");",
              "err": {},
              "uuid": "ecade1ab-3cbd-47a2-a0a4-9e276f0f998b",
              "parentUUID": "d287d223-2777-44eb-b0b0-4ade2a01d5fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b59121fa-012c-458a-9b4f-463535fc28c4",
            "1e91bacf-8138-4eaa-8356-ca62c0d3656e",
            "ecade1ab-3cbd-47a2-a0a4-9e276f0f998b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf2a28ec-40e4-4510-8ad1-59fc6ecc0005",
          "title": "Time Converter",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/convertTime.test.js",
          "file": "/test/convertTime.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Checks for invalid input",
              "fullTitle": "Time Converter Checks for invalid input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  convertTime(\"A\");\n}).to.throw(\"Invalid Input\");",
              "err": {},
              "uuid": "efdc5860-51d3-4c04-9929-398a43383f7f",
              "parentUUID": "cf2a28ec-40e4-4510-8ad1-59fc6ecc0005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contains properties {hours, minutes, seconds}",
              "fullTitle": "Time Converter Contains properties {hours, minutes, seconds}",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// expect(convertTime(3600)).to.have.property(\"hours\");\n// expect(convertTime(3600)).to.have.property(\"minutes\");\n// expect(convertTime(3600)).to.have.property(\"seconds\");\nexpect(convertTime(3600)).to.have.keys([\"hours\", \"minutes\", \"seconds\"]);",
              "err": {},
              "uuid": "7a9bd758-316e-41f2-adca-15b771ceb860",
              "parentUUID": "cf2a28ec-40e4-4510-8ad1-59fc6ecc0005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check correct conversion",
              "fullTitle": "Time Converter Check correct conversion",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// expect(convertTime(3600).hours).to.be.equal(1);\nexpect(convertTime(3600)).to.deep.equal({\n  hours: 1,\n  minutes: 0,\n  seconds: 0,\n});",
              "err": {},
              "uuid": "283cd291-bd1e-4031-8b1c-10562ef65834",
              "parentUUID": "cf2a28ec-40e4-4510-8ad1-59fc6ecc0005",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "efdc5860-51d3-4c04-9929-398a43383f7f",
            "7a9bd758-316e-41f2-adca-15b771ceb860",
            "283cd291-bd1e-4031-8b1c-10562ef65834"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f4ac765-361c-40f2-a25a-8f2e4c242ce3",
          "title": "Frequency Counter",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/frequencyCounter.test.js",
          "file": "/test/frequencyCounter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check for all objects",
              "fullTitle": "Frequency Counter Check for all objects",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(frequencyCounter(\"aeiou\")).to.have.keys([\"a\", \"e\", \"i\", \"o\", \"u\"]);",
              "err": {
                "message": "TypeError: Cannot convert undefined or null to object",
                "estack": "TypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at Object.getOwnEnumerableProperties (node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js:28:17)\n    at Proxy.assertKeys (node_modules/chai/lib/chai/core/assertions.js:2365:18)\n    at Proxy.methodWrapper (node_modules/chai/lib/chai/utils/addMethod.js:57:25)\n    at Context.it (test/frequencyCounter.test.js:6:47)",
                "diff": null
              },
              "uuid": "6aa762e3-1d10-4182-a401-fab8213b446a",
              "parentUUID": "3f4ac765-361c-40f2-a25a-8f2e4c242ce3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for vowel frequency",
              "fullTitle": "Frequency Counter Check for vowel frequency",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(frequencyCounter(\"Surfboard\")).to.deep.equal({\n  a: 1,\n  e: 0,\n  i: 0,\n  o: 1,\n  u: 1,\n});",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal { a: 1, e: 0, i: 0, o: 1, u: 1 }",
                "estack": "AssertionError: expected undefined to deeply equal { a: 1, e: 0, i: 0, o: 1, u: 1 }\n    at Context.it (test/frequencyCounter.test.js:10:51)",
                "diff": null
              },
              "uuid": "49b0be81-8644-4d33-8169-60dd6c0949ee",
              "parentUUID": "3f4ac765-361c-40f2-a25a-8f2e4c242ce3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for invalid input",
              "fullTitle": "Frequency Counter Check for invalid input",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  frequencyCounter(123);\n}).to.throw(Error, \"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw Error",
                "estack": "AssertionError: expected [Function] to throw Error\n    at Context.it (test/frequencyCounter.test.js:22:16)",
                "diff": null
              },
              "uuid": "44842c5a-27ed-4e7a-b267-6879ed703b91",
              "parentUUID": "3f4ac765-361c-40f2-a25a-8f2e4c242ce3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6aa762e3-1d10-4182-a401-fab8213b446a",
            "49b0be81-8644-4d33-8169-60dd6c0949ee",
            "44842c5a-27ed-4e7a-b267-6879ed703b91"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e9b6ccdb-0859-4113-8d27-b45450327599",
          "title": "Object Structure",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/objectStructure.test.js",
          "file": "/test/objectStructure.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check for no arguments passed",
              "fullTitle": "Object Structure Check for no arguments passed",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  getObjectStructure();\n}).to.throw(Error, \"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw Error",
                "estack": "AssertionError: expected [Function] to throw Error\n    at Context.it (test/objectStructure.test.js:8:16)",
                "diff": null
              },
              "uuid": "41eaa280-0323-447f-85d4-44c6d1bf2dce",
              "parentUUID": "e9b6ccdb-0859-4113-8d27-b45450327599",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks if null object is detected",
              "fullTitle": "Object Structure Checks if null object is detected",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(getObjectStructure({})).to.deep.equal({});",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal {}",
                "estack": "AssertionError: expected undefined to deeply equal {}\n    at Context.it (test/objectStructure.test.js:12:44)",
                "diff": null
              },
              "uuid": "a2140aa9-7b73-4cf0-b63a-6c3bbca861ad",
              "parentUUID": "e9b6ccdb-0859-4113-8d27-b45450327599",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for single level object",
              "fullTitle": "Object Structure Check for single level object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(getObjectStructure({ name: \"Some Name\", age: 10 })).to.deep.equal({\n  name: \"string\",\n  age: \"number\",\n});",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal { name: 'string', age: 'number' }",
                "estack": "AssertionError: expected undefined to deeply equal { name: 'string', age: 'number' }\n    at Context.it (test/objectStructure.test.js:16:72)",
                "diff": null
              },
              "uuid": "e3a0e688-8fdf-48c0-867c-9c9f9e0d457e",
              "parentUUID": "e9b6ccdb-0859-4113-8d27-b45450327599",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "41eaa280-0323-447f-85d4-44c6d1bf2dce",
            "a2140aa9-7b73-4cf0-b63a-6c3bbca861ad",
            "e3a0e688-8fdf-48c0-867c-9c9f9e0d457e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1120db63-57b9-4e9a-b171-a374a8070277",
          "title": "RGB Converter",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/rgbToHexConverter.test.js",
          "file": "/test/rgbToHexConverter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if 7 digit output is sent ",
              "fullTitle": "RGB Converter Check if 7 digit output is sent ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(rgbToHexConversion(10, 10, 10).length).to.be.equal(7);",
              "err": {
                "message": "TypeError: Cannot read property 'length' of undefined",
                "estack": "TypeError: Cannot read property 'length' of undefined\n    at Context.it (test/rgbToHexConverter.test.js:7:42)",
                "diff": null
              },
              "uuid": "1266dec6-7b0c-4e91-87fb-531c2a4084a2",
              "parentUUID": "1120db63-57b9-4e9a-b171-a374a8070277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Returns rgb value",
              "fullTitle": "RGB Converter Returns rgb value",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(rgbToHexConversion(10, 10, 10)).to.equal(\"#0a0a0a\");",
              "err": {
                "message": "AssertionError: expected undefined to equal '#0a0a0a'",
                "estack": "AssertionError: expected undefined to equal '#0a0a0a'\n    at Context.it (test/rgbToHexConverter.test.js:12:47)",
                "diff": null
              },
              "uuid": "5cdfe575-3316-428d-b0f3-a3b5a7a2fb12",
              "parentUUID": "1120db63-57b9-4e9a-b171-a374a8070277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks if input is greater than 255",
              "fullTitle": "RGB Converter Checks if input is greater than 255",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  rgbToHexConversion(300, 200, 200);\n}).to.throw(\"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.it (test/rgbToHexConverter.test.js:19:16)",
                "diff": null
              },
              "uuid": "1ff1e02a-21e9-4e73-b99d-67ac3cea4a46",
              "parentUUID": "1120db63-57b9-4e9a-b171-a374a8070277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Takes only three inputs",
              "fullTitle": "RGB Converter Takes only three inputs",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  rgbToHexConversion(100, 100, 100, 100);\n}).to.throw(\"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.it (test/rgbToHexConverter.test.js:26:16)",
                "diff": null
              },
              "uuid": "e3ad6287-0054-4a0e-ac44-20b039693078",
              "parentUUID": "1120db63-57b9-4e9a-b171-a374a8070277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Only takes integer input",
              "fullTitle": "RGB Converter Only takes integer input",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  rgbToHexConversion(\"a\", 10, 10);\n}).to.throw(\"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.it (test/rgbToHexConverter.test.js:32:16)",
                "diff": null
              },
              "uuid": "ce769808-ad36-474b-949b-0eed7962715a",
              "parentUUID": "1120db63-57b9-4e9a-b171-a374a8070277",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1266dec6-7b0c-4e91-87fb-531c2a4084a2",
            "5cdfe575-3316-428d-b0f3-a3b5a7a2fb12",
            "1ff1e02a-21e9-4e73-b99d-67ac3cea4a46",
            "e3ad6287-0054-4a0e-ac44-20b039693078",
            "ce769808-ad36-474b-949b-0eed7962715a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de6c8373-dc3a-403d-8dd3-a9197d7d9952",
          "title": "Check String rotation",
          "fullFile": "/home/juilee/Raw Assesement/core-JS-coding-test/test/rotateString.test.js",
          "file": "/test/rotateString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check input ",
              "fullTitle": "Check String rotation Check input ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  rotateString();\n}).to.throw(\"Invalid Input\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.it (test/rotateString.test.js:8:16)",
                "diff": null
              },
              "uuid": "158810c4-c425-4aee-9675-177646b78295",
              "parentUUID": "de6c8373-dc3a-403d-8dd3-a9197d7d9952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checks for invalid direction",
              "fullTitle": "Check String rotation Checks for invalid direction",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  rotateString(\"Surfboard\", 1, \"some\");\n}).to.throw(\"Invalid Direction\");",
              "err": {
                "message": "AssertionError: expected [Function] to throw an error",
                "estack": "AssertionError: expected [Function] to throw an error\n    at Context.it (test/rotateString.test.js:13:16)",
                "diff": null
              },
              "uuid": "1564a873-6964-4cdb-8015-fcb77902beee",
              "parentUUID": "de6c8373-dc3a-403d-8dd3-a9197d7d9952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Left rotation",
              "fullTitle": "Check String rotation Left rotation",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(rotateString(\"Surfboard\", 1, \"left\")).to.be.equal(\"urfboardS\");",
              "err": {
                "message": "AssertionError: expected undefined to equal 'urfboardS'",
                "estack": "AssertionError: expected undefined to equal 'urfboardS'\n    at Context.it (test/rotateString.test.js:16:56)",
                "diff": null
              },
              "uuid": "8a0cf168-4a63-4427-90a5-6dd7790cb71e",
              "parentUUID": "de6c8373-dc3a-403d-8dd3-a9197d7d9952",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Right rotation",
              "fullTitle": "Check String rotation Right rotation",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(rotateString(\"Surfboard\", 1, \"right\")).to.be.equal(\"dSurfboar\");",
              "err": {
                "message": "AssertionError: expected undefined to equal 'dSurfboar'",
                "estack": "AssertionError: expected undefined to equal 'dSurfboar'\n    at Context.it (test/rotateString.test.js:19:57)",
                "diff": null
              },
              "uuid": "e9393849-3056-488b-8761-f614b372924f",
              "parentUUID": "de6c8373-dc3a-403d-8dd3-a9197d7d9952",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "158810c4-c425-4aee-9675-177646b78295",
            "1564a873-6964-4cdb-8015-fcb77902beee",
            "8a0cf168-4a63-4427-90a5-6dd7790cb71e",
            "e9393849-3056-488b-8761-f614b372924f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}